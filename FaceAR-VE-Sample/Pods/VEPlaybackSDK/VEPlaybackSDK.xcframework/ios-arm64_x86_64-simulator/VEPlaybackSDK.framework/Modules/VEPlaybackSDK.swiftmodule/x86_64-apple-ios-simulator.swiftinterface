// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.6.1 (swiftlang-5.6.0.323.66 clang-1316.0.20.12)
// swift-module-flags: -target x86_64-apple-ios11.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -module-name VEPlaybackSDK
import AVFoundation
import BanubaUtilities
import Foundation
import Swift
import UIKit
@_exported import VEPlaybackSDK
import VideoEditor
import _Concurrency
public class VEPlayback {
  public init?(videoEditorService: VideoEditor.VideoEditorService)
  public func getPlayer(forExternalAsset asset: AVFoundation.AVAsset? = nil, delegate: BanubaUtilities.VideoEditorPlayerDelegate?) -> BanubaUtilities.VideoEditorPlayable
  public func getPlayableView(isThumbnailNeeded: Swift.Bool = true, forExternalAsset asset: AVFoundation.AVAsset? = nil, delegate: BanubaUtilities.VideoEditorPlayerDelegate?) -> VEPlaybackSDK.VideoPlayableView
  @objc deinit
}
public protocol VideoPlayableView : UIKit.UIImageView {
  var previewLayer: AVFoundation.AVPlayerLayer { get }
  var imageGenerator: AVFoundation.AVAssetImageGenerator? { get set }
  var videoEditorPlayer: BanubaUtilities.VideoEditorPlayable? { get set }
  var player: AVFoundation.AVPlayer? { get }
  func setPlayer(_ player: BanubaUtilities.VideoEditorPlayable?, isThumbnailNeeded: Swift.Bool)
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class PlayablePreview : UIKit.UIImageView, VEPlaybackSDK.VideoPlayableView {
  @_Concurrency.MainActor(unsafe) public var videoEditorPlayer: BanubaUtilities.VideoEditorPlayable?
  @_Concurrency.MainActor(unsafe) public var imageGenerator: AVFoundation.AVAssetImageGenerator?
  @_Concurrency.MainActor(unsafe) @objc override dynamic public class var layerClass: Swift.AnyClass {
    @_Concurrency.MainActor(unsafe) @objc get
  }
  @_Concurrency.MainActor(unsafe) public var previewLayer: AVFoundation.AVPlayerLayer {
    get
  }
  @_Concurrency.MainActor(unsafe) public var player: AVFoundation.AVPlayer? {
    get
  }
  @_Concurrency.MainActor(unsafe) public func setPlayer(_ player: BanubaUtilities.VideoEditorPlayable?, isThumbnailNeeded: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(image: UIKit.UIImage?)
  @available(iOS 3.0, *)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(image: UIKit.UIImage?, highlightedImage: UIKit.UIImage?)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(frame: CoreGraphics.CGRect)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
public protocol PlayableViewController : AnyObject {
  func startStopPlay(loop: Swift.Bool, fixedSpeed: Swift.Bool)
  func startPlay(loop: Swift.Bool, fixedSpeed: Swift.Bool)
  func stopPlay()
  func pausePlay()
  func resumePlay()
  func smoothlySeek(to time: CoreMedia.CMTime)
  func seek(to time: CoreMedia.CMTime)
  func reloadPreview(shouldAutoStart: Swift.Bool)
  func reloadComposition(shouldAutoStart: Swift.Bool)
  func didVideoPlay(atTime time: CoreMedia.CMTime)
  var currentTime: Foundation.TimeInterval { get }
  var videoDuration: Swift.Double { get }
  var currentTimeInCMTime: CoreMedia.CMTime { get }
  var videoDurationInCMTime: CoreMedia.CMTime { get }
  var player: BanubaUtilities.VideoEditorPlayable? { get }
  var isPlaying: Swift.Bool { get }
  var previewVideoView: VEPlaybackSDK.VideoPlayableView? { get }
}
